{"version":3,"sources":["components/Datatable.js","components/Pagination.js","components/DatatableHeading.js","App.js","index.js"],"names":["Datatable","data","style","overflowX","cellPadding","cellSpacing","id","currentData","map","row","index","Pagination","currentPage","setCurrentPage","indexOfFirstRecord","indexOfLastRecord","airportsPerPage","search","paginate","pageNumber","className","onClick","totalAirports","DatatableHeading","App","useState","setData","searchQuery","setSearchQuery","searchColumns","typesArray","setTypesArray","setAirportsPerPage","useEffect","airportsData","length","calculateRow","slice","rows","filter","some","column","toString","toLowerCase","indexOf","el","type","types","Set","eachDataRecord","trim","eachType","checked","includes","onChange","e","prev","sc","value","target","htmlFor","name","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bbe48ef6.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./Datatable.css\";\r\n\r\nfunction Datatable({ data }) {\r\n  return (\r\n    <div style={{ overflowX: \"auto\" }}>\r\n      <table cellPadding={0} cellSpacing={0} id=\"airports\">\r\n        <thead>\r\n          <tr>\r\n            <th>Name</th>\r\n            <th>ICAO</th>\r\n            <th>IATA</th>\r\n            <th>Elev.</th>\r\n            <th>Lat.</th>\r\n            <th>Long.</th>\r\n            <th>Type</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {data &&\r\n            data.currentData.map((row, index) => (\r\n              <tr key={index}>\r\n                <td>{row[\"name\"]}</td>\r\n                <td>{row[\"icao\"]}</td>\r\n                <td>{row[\"iata\"]}</td>\r\n                <td>{row[\"elevation\"]}</td>\r\n                <td>{row[\"latitude\"]}</td>\r\n                <td>{row[\"longitude\"]}</td>\r\n                <td>{row[\"type\"]}</td>\r\n              </tr>\r\n            ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Datatable;\r\n","import React from \"react\";\r\nimport \"./pagination.css\";\r\n\r\nexport default function Pagination({ currentPage, setCurrentPage, indexOfFirstRecord, indexOfLastRecord, airportsPerPage, search, data }) {\r\n  const paginate = (pageNumber) => setCurrentPage(pageNumber);\r\n\r\n  return (\r\n    <div className=\"pagination\">\r\n      {currentPage - 1 > 0 ? (\r\n        <i className=\"cursor-pointer fas fa-arrow-left fa-2x icons\" onClick={() => paginate(currentPage - 1)}></i>\r\n      ) : (\r\n        <>&nbsp;</>\r\n      )}\r\n      <span>\r\n        Showing &nbsp;\r\n        <span className=\"font-weight-bold\">\r\n          {indexOfFirstRecord + 1} - {indexOfLastRecord > search(data).totalAirports ? search(data).totalAirports : indexOfLastRecord}\r\n          &nbsp;\r\n        </span>\r\n        of <span className=\"font-weight-bold\">{search(data).totalAirports} </span>results\r\n      </span>\r\n      {currentPage * airportsPerPage < search(data).totalAirports ? (\r\n        <i className=\"cursor-pointer fas fa-arrow-right fa-2x icons\" onClick={() => paginate(currentPage + 1)}></i>\r\n      ) : (\r\n        <>&nbsp;</>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport \"./DatatableHeading.css\";\r\n\r\nexport default function DatatableHeading() {\r\n  return (\r\n    <div className=\"airports__container-heading\">\r\n      <h1>\r\n        Filter <span>Airports</span>\r\n      </h1>\r\n      <i className=\"cursor-pointer fab fa-windows fa-2x\"></i>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\nimport airportsData from \"./assets/data/airports.json\";\nimport \"./App.css\";\nimport { DataTable, Pagination } from \"./components\";\nimport DatatableHeading from \"./components/DatatableHeading\";\n\nfunction App() {\n  const [data, setData] = useState();\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const searchColumns = [\"name\", \"icao\", \"iata\", \"elevation\", \"latitude\", \"longitude\"];\n  const [typesArray, setTypesArray] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [airportsPerPage, setAirportsPerPage] = useState(4);\n  const indexOfLastRecord = currentPage * airportsPerPage;\n  const indexOfFirstRecord = indexOfLastRecord - airportsPerPage;\n\n  useEffect(() => {\n    setData({\n      currentData: airportsData,\n      totalAirports: airportsData.length,\n    });\n  }, []);\n\n  //pagination\n  const calculateRow = (row) => {\n    const currentData = row.slice(indexOfFirstRecord, indexOfLastRecord);\n    return {\n      currentData: currentData,\n      totalAirports: row.length,\n    };\n  };\n\n  useEffect(() => {\n    setCurrentPage(1);\n  }, [typesArray.length]);\n\n  //filters\n  function search(rows) {\n    if (searchQuery && typesArray.length > 0) {\n      return calculateRow(\n        rows.currentData.filter(\n          (row) =>\n            searchColumns.some((column) => row[column] && row[column].toString().toLowerCase().indexOf(searchQuery.toLowerCase()) > -1) &&\n            typesArray.length > 0 &&\n            typesArray.some((el) => row.type === el)\n        )\n      );\n    } else if (searchQuery) {\n      return calculateRow(\n        rows.currentData.filter((row) =>\n          searchColumns.some((column) => row[column] && row[column].toString().toLowerCase().indexOf(searchQuery.toLowerCase()) > -1)\n        )\n      );\n    } else if (typesArray.length > 0) {\n      return calculateRow(rows.currentData.filter((row) => typesArray.some((el) => row.type === el)));\n    } else {\n      return calculateRow(rows.currentData);\n    }\n  }\n\n  //unique types in data\n  let types = [...new Set(data && data.currentData.map((eachDataRecord) => eachDataRecord.type.trim() !== \"\" && eachDataRecord.type))];\n  types = types.filter((data) => data);\n\n  return (\n    <div className=\"airports__container\">\n      <DatatableHeading />\n      <div className=\"airports__action\">\n        <div className=\"airports__action-type\">\n          <h2>Type</h2>\n          <div>\n            {types &&\n              types.map((eachType) => (\n                <label key={eachType}>\n                  <input\n                    type=\"checkbox\"\n                    checked={typesArray.includes(eachType)}\n                    onChange={(e) => {\n                      const checked = typesArray.includes(eachType);\n                      setTypesArray((prev) => (checked ? prev.filter((sc) => sc !== eachType) : [...prev, eachType]));\n                    }}\n                  />\n                  {eachType}\n                </label>\n              ))}\n          </div>\n        </div>\n        <div className=\"airport__actions-search\">\n          <h2>Filter by search</h2>\n          <input type=\"search\" value={searchQuery} onChange={(e) => setSearchQuery(e.target.value)} />\n        </div>\n      </div>\n      <label htmlFor=\"airport__container-records\">Show Records: &nbsp;</label>\n\n      <select\n        name=\"airport__container-records\"\n        id=\"airport__container-records\"\n        value={airportsPerPage}\n        onChange={(e) => setAirportsPerPage(e.target.value)}\n      >\n        <option value=\"4\">4</option>\n        <option value=\"10\">10</option>\n        <option value=\"20\">20</option>\n        <option value=\"30\">30</option>\n        <option value=\"40\">40</option>\n        <option value=\"50\">50</option>\n      </select>\n      {data && (\n        <>\n          <DataTable data={search(data)} />\n          <Pagination\n            currentPage={currentPage}\n            airportsPerPage={airportsPerPage}\n            indexOfFirstRecord={indexOfFirstRecord}\n            indexOfLastRecord={indexOfLastRecord}\n            search={search}\n            data={data}\n            setCurrentPage={setCurrentPage}\n          />\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}